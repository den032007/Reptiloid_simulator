local monarch = require "monarch.monarch"
local lang = require "lang"
local save_file = sys.get_save_file("gamedata", "gamedata")

local function set_current_level(level)
	gamedata = sys.load(save_file)
	gamedata.current_level = level
	sys.save(save_file, gamedata)
end

local function set_level_name(level)
	if level == "level1" then
		gui.set_text(gui.get_node "level_text", "Первый день в офисе.")
	elseif level == "level2" then
		gui.set_text(gui.get_node "level_text", "Теплое место.")
	elseif level == "level3" then
		gui.set_text(gui.get_node "level_text", "Lego снова в деле.")
	elseif level == "level4" then
		gui.set_text(gui.get_node "level_text", "Наса не стоит на месте")
	elseif level == "level5" then
		gui.set_text(gui.get_node "level_text", "Знакомство с Илоном.")
	elseif level == "level6" then
		gui.set_text(gui.get_node "level_text", "Время ускориться.")
	elseif level == "level7" then
		gui.set_text(gui.get_node "level_text", "Кофе - прошлый век.")
	elseif level == "level8" then
		gui.set_text(gui.get_node "level_text", "Все дальше и дальше.")
	elseif level == "level9" then
		gui.set_text(gui.get_node "level_text", "И снова Илон.")
	elseif level == "level10" then
		gui.set_text(gui.get_node "level_text", "Время отдохнуть.")
	elseif level == "level11" then
		gui.set_text(gui.get_node "level_text", "Роботолюция.")
	elseif level == "level12" then
		gui.set_text(gui.get_node "level_text", "Вам посылка!")
	elseif level == "level13" then
		gui.set_text(gui.get_node "level_text", "Свободная касса!")
	elseif level == "level14" then
		gui.set_text(gui.get_node "level_text", "Затишье перед бурей.")
	elseif level == "level15" then
		gui.set_text(gui.get_node "level_text", "У меня плохое предчувствие.")
	elseif level == "level6" then
		gui.set_text(gui.get_node "level_text", "В бесконечность и далее!")
	elseif level == "level17" then
		gui.set_text(gui.get_node "level_text", "Илон наносит ответный удар.")
	elseif level == "level18" then
		gui.set_text(gui.get_node "level_text", "Ни шагу назад!")
	elseif level == "level19" then
		gui.set_text(gui.get_node "level_text", "Верните Егэ!")
	elseif level == "level20" then
		gui.set_text(gui.get_node "level_text", "В поисках богов.")
	elseif level == "level21" then
		gui.set_text(gui.get_node "level_text", "Кажется я понял почему место было вакантно.")
	elseif level == "level22" then
		gui.set_text(gui.get_node "level_text", "Мой лорд, заберите меня обратно!")
end

end


function init(self)
	
	self.buttons = {
		back = {
			node = gui.get_node "back",
			action = function() monarch.show(hash "menu", { clear = true, reload = true }) end
		},
		start = {
			node = gui.get_node "start",
			action = function() monarch.show(hash "game") end
		}
	}

	gamedata = sys.load(save_file)
	if gamedata.last_level > 1  then
		max_level = gamedata.last_level
	else
		max_level = 1
	end
	
	for i=1, max_level do
		level_name = "level"..tostring(i)
		gui.set_texture(gui.get_node (level_name) ,"gui")
		gui.play_flipbook(gui.get_node (level_name), "green_opened_72x72")
		level_name = "level"..tostring(i)
		next_level = {
			node = gui.get_node (level_name), 
			action = function () set_current_level(i) end
		}
		table.insert(self.buttons, next_level)

		
		
	end
	

	sound.play "loader:/sound#menu_music"
	msg.post(".", "acquire_input_focus")
end

function final(self)
	sound.stop "loader:/sound#menu_music"
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function set_textures_for_levels_except(level)
	gamedata = sys.load(save_file)
	if gamedata.last_level > 1  then
		max_level = gamedata.last_level
	else
		max_level = 1
	end

	for i=1, max_level do
		level_name = "level"..tostring(i)
		if level_name ~= level then
			gui.set_texture(gui.get_node (level_name) ,"gui")
			gui.play_flipbook(gui.get_node (level_name), "green_opened_72x72")
		end
	end
end
	
function on_input(self, action_id, action)
	if action_id == hash "click" and action.pressed then
		sound.play "loader:/sound#click"
	elseif action_id == hash "click" and action.released then
		print(action_id)
		for _, button in pairs(self.buttons) do
			if gui.pick_node(button.node, action.x, action.y) then
				if _ == "back" then 
					button.action(self)
				elseif _ == "start" then
					button.action(self)
				else 
					level_name = "level"..tostring(_)
					gui.set_texture(gui.get_node (level_name) ,"gui")
					gui.play_flipbook(gui.get_node ("level_preview") ,level_name)
					gui.play_flipbook(gui.get_node (level_name), "green_selected_72x72")
					button.action(self)
					set_level_name(level_name)
					set_textures_for_levels_except(level_name)
				end
			end
		end
	end
end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
